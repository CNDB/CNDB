Questions about dashboard structure and behavior
=================================================

- Login/logout

  * Separate landing page

  * Login page : rename `New password` to `I forgot my password`

  * Dashboard itself only visible when logged in

  * CSRF protection for login

    + needs a short-lived Anti-CRSF-token

    + problem with login-form embedded in landing page

    + problem with JS-apps based on the REST API

      - server needs an explicit list of authorized domains for such
        JS apps

      - otherwise, CSRF is wide open

  * How long should a user stay logged in?

- Interaction

  * Dashboard starts with overview of nodes controlled, i.e., owned or
    managed, by the person who is logged in

    + No error message when no nodes/device/... exist

    + New `node/device...` button

    Per default, all instances controlled by the user are shown, i.e.,
    all nodes, all devices, all interfaces, all antennas, all
    ip-addresses

    * In this view, device needs a node-column, interface needs a
      device and a node column, ...

    Per level, five possible actions (`node` is used a concrete
    example below):

    + Create a new node (<span class="pull-right"> in <h2>)

    + Edit an existing node

      - Switch view to form, i.e.hide all tables temporarily

      - Submit and cancel button

    + Restrict display to list of sub-ordinate instances for a
      specific instance, e.g., devices, interfaces, ... for  a
      specific node

    + Delete a node

    + Show graphs/statistics

    + If one of those actions is taken by the user,
      `div.node-details` changes content:

      - Except for `delete` and `graphs`, new content appears, scroll
        to `#new-id`

    For some types, additional actions are necessary, e.g., for device
    a `generate firmware` action

  * When the device table is shown:

    + What happens when the user chooses to display details for one
      device?

      - Same as with node

    + Recurse for showing details about a specific interface...

  * If out layers are not shown, some way of navigating back/up is
    necessary

    + Some kind of breadcrumbs, too

- Javascript callbacks for navigation links:

  * #About

  * #delete

  * #edit

  * #filter

  * #firmware

  * #Settings

- Navigation

  * Single line:

    x `FF Dashboard`: home of dashboard

    x Menu at left

      + [User Docs] : once added

      x Devel

        x API

        x Docs

      x Admin : only if authorized

      x About

        - contains contact

    x Right hand side:

      x My settings: edit personal and account information

      x Logout

  * Page for `impressum` is legally necessary, the copyright in the
    footer should link to that.

  * Breadcrumbs for position in dashboard ?

  * Nav button to show detailed navigation ?

- I18N/L10N ?
